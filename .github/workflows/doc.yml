name: Check documentation builds
on: [pull_request, workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ubuntu:
    name: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            compiler: g++
          - os: macOS-latest
            compiler: clang++
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    defaults:
      run:
        shell: bash -l {0}
    env:
      CXX: "ccache ${{ matrix.compiler }}"
      CXXFLAGS: "-O2 -g"
    steps:
      - uses: actions/checkout@v5
      - name: "Create micromamba environment"
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-name: libsemigroups
          create-args: >-
            python
            fmt
      - name: "Set environment variables . . ."
        run: |
          echo "PKG_CONFIG_PATH=$MAMBA_ROOT_PREFIX/envs/libsemigroups/lib/pkgconfig:$MAMBA_ROOT_PREFIX/envs/libsemigroups/share/pkgconfig:/usr/local/lib/pkgconfig" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$MAMBA_ROOT_PREFIX/envs/libsemigroups/lib:/usr/local/lib" >> $GITHUB_ENV
          echo "PATH=$MAMBA_ROOT_PREFIX/envs/libsemigroups/bin:$PATH" >> $GITHUB_ENV
      - name: "macOS only: Install libsemigroups dependencies . . ."
        if: ${{ matrix.os == 'macOS-latest' }}
        run: brew install autoconf automake libtool
      - name: "Setup ccache . . ."
        uses: Chocobo1/setup-ccache-action@v1
        with:
          update_packager_index: false
          install_ccache: true
      - name: "Install libsemigroups . . ."
        run: |
          git clone --depth 1 --branch main https://github.com/libsemigroups/libsemigroups.git
          cd libsemigroups
          ./autogen.sh && ./configure CXX="$CXX" CXXFLAGS="$CXXFLAGS" --disable-hpcombi --with-external-fmt && sudo make install -j8
          ccache -s
      - name: "Python version . . ."
        run: |
          python --version
          pip3 --version
      - name: "Pip installing requirements.txt . . ."
        run: |
          pip3 install -r requirements.txt
      - name: "Pip3 installing libsemigroups_pybind11 . . ."
        run: |
          echo $PKG_CONFIG_PATH
          pip3 install . -v
      - name: "Check doc builds"
        run: make doc SPHINXOPTS="-W"
